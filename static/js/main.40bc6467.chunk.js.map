{"version":3,"sources":["common/MyCheckbox/MyCheckbox.module.css","common/MyInput/MyInput.module.css","FirstLesson.tsx","common/MyButton/MyButton.tsx","common/MyCheckbox/MyCheckbox.tsx","SecondHomework.tsx","common/MyInput/MyInput.tsx","ThirdHomework.tsx","App.tsx","reportWebVitals.ts","index.tsx","common/MyButton/MyButton.module.css"],"names":["module","exports","FirstHomework","props","message","map","newMessages","className","name","text","time","MyButton","style","color","s","btn","red","green","onClick","title","MyCheckbox","type","checkbox","onChange","checked","SecondHomework","tasks","t","e","changeTask","id","currentTarget","done","removeTask","MyInput","txt","placeholder","value","onKeyDown","ThirdHomework","useState","setTitle","sayHello","trimmedTitle","trim","alert","length","key","keyCode","names","newNames","App","v1","setTasks","nam","newName","taskID","newTasks","filter","task","changedTasks","find","newN","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40bc6467.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"MyCheckbox_checkbox__1a1ap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"txt\":\"MyInput_txt__SVVLI\"};","import React from 'react';\r\nimport './App.css';\r\nimport {MessageType} from \"./App\";\r\n\r\ntype PropsType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\n\r\nexport const FirstHomework = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.message.map(newMessages => {\r\n                    return (\r\n                        <div className='message'>\r\n                            <div className='friendName'>{newMessages.name}</div>\r\n                            <div className='textMessage'>{newMessages.text}</div>\r\n                            <div className='timeMessage'>{newMessages.time}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React, {MouseEvent} from 'react';\r\nimport s from './MyButton.module.css'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    onClick: (event: MouseEvent<HTMLButtonElement>) => void\r\n    color?: 'red' | 'green'\r\n}\r\nexport const MyButton = (props: PropsType) => {\r\n    const style = props.color === 'red' ? `${s.btn} ${s.red}` : `${s.btn} ${s.green}`\r\n    return (\r\n        <div>\r\n            <button className={`${style} ${s.btn}` } color={props.color} onClick={props.onClick}>{props.title}</button>\r\n        </div>\r\n\r\n    )\r\n};","import React, {ChangeEvent} from 'react';\r\nimport s from './MyCheckbox.module.css';\r\n\r\ntype PropsType = {\r\n    type: string\r\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\r\n    checked?: boolean\r\n}\r\nexport const MyCheckbox = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <input type={props.type} className={s.checkbox} onChange={props.onChange} checked={props.checked}/>\r\n        </div>\r\n    )\r\n};","import React, {ChangeEvent} from \"react\";\r\nimport './App.css';\r\nimport {TaskType} from \"./App\";\r\nimport {MyButton} from \"./common/MyButton/MyButton\";\r\nimport {MyCheckbox} from \"./common/MyCheckbox/MyCheckbox\";\r\n\r\ntype PropsType = {\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskID: string) => void\r\n    changeTask: (taskID: string, done: boolean) => void\r\n}\r\n\r\nexport const SecondHomework = (props: PropsType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n<ul>\r\n    {\r\n        props.tasks.map(t => {\r\n            const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                props.changeTask(t.id, e.currentTarget.checked)\r\n            };\r\n            return (\r\n                <li key={t.id}>\r\n                    <MyCheckbox type=\"checkbox\" onChange={onChangeHandler} checked={t.done}/>\r\n                    <span>{t.title}</span>\r\n                    <MyButton onClick={() => props.removeTask(t.id)} title={'X'}/>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n</ul>\r\n        </div>\r\n    )\r\n};","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './MyInput.module.css';\r\ntype PropsType = {\r\ntype: string\r\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\r\n    placeholder?: string\r\n    value?: string\r\n    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\nexport const MyInput = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <input type={props.type} className={s.txt} onChange={props.onChange} placeholder={props.placeholder} value={props.value} onKeyDown ={props.onKeyDown}/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState, KeyboardEvent, ChangeEvent} from \"react\";\r\nimport {NameType} from \"./App\";\r\nimport {MyInput} from \"./common/MyInput/MyInput\";\r\nimport {MyButton} from \"./common/MyButton/MyButton\";\r\n\r\ntype PropsType = {\r\n    names: Array<NameType>\r\n    sayHello: (name: string) => void\r\n}\r\n\r\n\r\nexport const ThirdHomework = (props: PropsType) => {\r\n\r\n    const [title, setTitle] = useState<string>('');\r\n    const sayHello = () => {\r\n        const trimmedTitle = title.trim();\r\n        if (trimmedTitle !== '') {\r\n            props.sayHello(trimmedTitle);\r\n            alert('Hello ' + trimmedTitle + ' ' + props.sayHello.length);\r\n            setTitle('');\r\n        }\r\n    };\r\n    const onKeyPressAddTask = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            sayHello()\r\n        } else if (e.keyCode === 27) {\r\n            setTitle('');\r\n        }\r\n    };\r\n\r\n    const onChangeFieldText = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div>\r\n            <MyInput type=\"text\" placeholder={'Введите имя'} value={title}\r\n                   onChange={onChangeFieldText} onKeyDown={onKeyPressAddTask}/>\r\n            <MyButton onClick={sayHello} title={'Press here'}/>\r\n            <div>\r\n                <span>Count of names {props.names.length}</span>\r\n            </div>\r\n            {\r\n                props.names.map(newNames => {\r\n                    return (\r\n                        <div>\r\n\r\n                            <span>{newNames.name}</span>\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};","import React, {useState} from 'react';\nimport './App.css';\nimport {FirstHomework} from \"./FirstLesson\";\nimport {SecondHomework} from \"./SecondHomework\";\nimport {v1} from \"uuid\";\nimport {ThirdHomework} from \"./ThirdHomework\";\nimport {MyButton} from \"./common/MyButton/MyButton\";\nimport {MyCheckbox} from \"./common/MyCheckbox/MyCheckbox\";\nimport {MyInput} from \"./common/MyInput/MyInput\";\n\nexport type MessageType = {\n    name: string\n    text: string\n    time: string\n}\n\nexport type TaskType = {\n    id: string\n    title: string\n    done: boolean\n}\n\nexport type NameType = {\n    id: string\n    name: string\n}\n\nfunction App() {\n    const messages = [\n        {name: 'Artem', text: 'Privet', time: '20:00'},\n        {name: 'Lena', text: 'Kak dela', time: '20:01'},\n        {name: 'Anton', text: 'It-kamasutra', time: '20:02'},\n    ];\n\n    const [tasks, setTasks] = useState<Array<TaskType>>([\n        {id: v1(), title: 'React', done: false},\n        {id: v1(), title: 'HTML', done: true},\n        {id: v1(), title: 'CSS', done: true},\n        {id: v1(), title: 'SaSS', done: true},\n        {id: v1(), title: 'Less', done: true},\n    ]);\n\n    const [nam, newName] = useState<Array<NameType>>(\n        []\n    );\n\n    function removeTask(taskID: string) {\n        const newTasks = tasks.filter(task => task.id !== taskID);\n        setTasks(newTasks)\n    }\n\n    function sayHello(name: string) {\n        const newN: NameType =  {id: v1(), name: name};\n        newName([newN, ...nam])\n    }\n\n    const changeTask = (taskID: string, done: boolean) => {\n        const changedTasks = tasks.find(task => task.id === taskID);\n        if (changedTasks) {\n            changedTasks.done = done;\n            setTasks([...tasks])\n        }\n    };\n    return (\n        <div className=\"App\">\n            <FirstHomework message={messages}/>\n            <SecondHomework tasks={tasks} removeTask={removeTask} changeTask={changeTask}/>\n            <ThirdHomework names={nam} sayHello={sayHello}/>\n            <div>\n                <MyButton title={'Button 1'} onClick={() => console.log('Button 1')}/>\n                <MyButton title={'Button 2'} onClick={() => console.log('Button 2')} color={'red'}/>\n                <MyCheckbox type={'checkbox'}/>\n                <MyInput type={'input'}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyButton_btn__ug6os\",\"red\":\"MyButton_red__1qdej\",\"green\":\"MyButton_green__1NmCo\"};"],"sourceRoot":""}