{"version":3,"sources":["common/MyButton/MyButton.module.css","common/MyHeader/MyHeader.module.css","common/MyCheckbox/MyCheckbox.module.css","common/MyInput/MyInput.module.css","FirstLesson.tsx","common/MyButton/MyButton.tsx","common/MyCheckbox/MyCheckbox.tsx","SecondHomework.tsx","common/MyInput/MyInput.tsx","ThirdHomework.tsx","common/MyHeader/MyHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","FirstHomework","props","className","message","map","newMessages","name","text","time","MyButton","style","color","s","btn","red","green","onClick","title","MyCheckbox","type","checkbox","onChange","checked","SecondHomework","tasks","t","e","changeTask","id","currentTarget","done","removeTask","MyInput","txt","placeholder","value","onKeyDown","ThirdHomework","useState","setTitle","sayHello","trimmedTitle","trim","alert","length","key","keyCode","names","newNames","MyHeader","mySidenav","sidenav","width","widthNav","href","closeBtn","onClose","App","setWidth","cursorPos","setCursorPos","v1","setTasks","nam","newName","closeNavBar","checkCursorPosition","clientX","useEffect","document","addEventListener","removeEventListener","taskID","newTasks","filter","task","changedTasks","find","newN","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed033684.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyButton_btn__ug6os\",\"red\":\"MyButton_red__1qdej\",\"green\":\"MyButton_green__1NmCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"MyHeader_sidenav__2061g\",\"closeBtn\":\"MyHeader_closeBtn__e_pwr\",\"main\":\"MyHeader_main__1qYG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"MyCheckbox_checkbox__1a1ap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"txt\":\"MyInput_txt__SVVLI\"};","import React from 'react';\r\nimport './App.css';\r\nimport {MessageType} from \"./App\";\r\n\r\ntype PropsType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\n\r\nexport const FirstHomework = (props: PropsType) => {\r\n    return (\r\n        <div className='messageContainer'>\r\n            {\r\n                props.message.map(newMessages => {\r\n                    return (\r\n                        <div className='message'>\r\n                            <div className='friendName'>{newMessages.name}</div>\r\n                            <div className='textMessage'>{newMessages.text}</div>\r\n                            <div className='timeMessage'>{newMessages.time}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React, {MouseEvent} from 'react';\r\nimport s from \"./MyButton.module.css\"\r\n\r\ntype PropsType = {\r\n    title: string\r\n    onClick: (event: MouseEvent<HTMLButtonElement>) => void\r\n    color?: 'red' | 'green'\r\n}\r\nexport const MyButton = (props: PropsType) => {\r\n    const style = props.color === 'red' ? `${s.btn} ${s.red}` : `${s.btn} ${s.green}`\r\n    return (\r\n            <button className={`${style} ${s.btn}` } color={props.color} onClick={props.onClick}>{props.title}</button>\r\n\r\n    )\r\n};","import React, {ChangeEvent} from 'react';\r\nimport s from './MyCheckbox.module.css';\r\n\r\ntype PropsType = {\r\n    type: string\r\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\r\n    checked?: boolean\r\n}\r\nexport const MyCheckbox = (props: PropsType) => {\r\n    return (\r\n            <input type={props.type} className={s.checkbox} onChange={props.onChange} checked={props.checked}/>\r\n    )\r\n};","import React, {ChangeEvent} from \"react\";\r\nimport {TaskType} from \"./App\";\r\nimport {MyButton} from \"./common/MyButton/MyButton\";\r\nimport {MyCheckbox} from \"./common/MyCheckbox/MyCheckbox\";\r\n\r\ntype PropsType = {\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskID: string) => void\r\n    changeTask: (taskID: string, done: boolean) => void\r\n}\r\n\r\nexport const SecondHomework = (props: PropsType) => {\r\n\r\n\r\n    return (\r\n        <div className='secondHomework'>\r\n<ul>\r\n    {\r\n        props.tasks.map(t => {\r\n            const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                props.changeTask(t.id, e.currentTarget.checked)\r\n            };\r\n            return (\r\n                <li key={t.id}>\r\n                    <MyCheckbox type=\"checkbox\" onChange={onChangeHandler} checked={t.done}/>\r\n                    <span>{t.title}</span>\r\n                    <MyButton onClick={() => props.removeTask(t.id)} title={'X'}/>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n</ul>\r\n        </div>\r\n    )\r\n};","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './MyInput.module.css';\r\ntype PropsType = {\r\ntype: string\r\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\r\n    placeholder?: string\r\n    value?: string\r\n    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\nexport const MyInput = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <input type={props.type} className={s.txt} onChange={props.onChange} placeholder={props.placeholder} value={props.value} onKeyDown ={props.onKeyDown}/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState, KeyboardEvent, ChangeEvent} from \"react\";\r\nimport {NameType} from \"./App\";\r\nimport {MyInput} from \"./common/MyInput/MyInput\";\r\nimport {MyButton} from \"./common/MyButton/MyButton\";\r\n\r\ntype PropsType = {\r\n    names: Array<NameType>\r\n    sayHello: (name: string) => void\r\n}\r\n\r\n\r\nexport const ThirdHomework = (props: PropsType) => {\r\n\r\n    const [title, setTitle] = useState<string>('');\r\n    const sayHello = () => {\r\n        const trimmedTitle = title.trim();\r\n        if (trimmedTitle !== '') {\r\n            props.sayHello(trimmedTitle);\r\n            alert('Hello ' + trimmedTitle + ' ' + props.sayHello.length);\r\n            setTitle('');\r\n        }\r\n    };\r\n    const onKeyPressAddTask = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            sayHello()\r\n        } else if (e.keyCode === 27) {\r\n            setTitle('');\r\n        }\r\n    };\r\n\r\n    const onChangeFieldText = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div className='thirdHomework'>\r\n            <MyInput type=\"text\" placeholder={'Введите имя'} value={title}\r\n                   onChange={onChangeFieldText} onKeyDown={onKeyPressAddTask}/>\r\n            <MyButton onClick={sayHello} title={'Press here'}/>\r\n            <div>\r\n                <span>Count of names {props.names.length}</span>\r\n            </div>\r\n            {\r\n                props.names.map(newNames => {\r\n                    return (\r\n                        <div>\r\n                            <span>{newNames.name}</span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport s from './MyHeader.module.css';\r\n\r\ntype PropsType = {\r\n    widthNav: string\r\n    onClose: () => void\r\n}\r\nexport const MyHeader = (props: PropsType) => {\r\n    return (\r\n\r\n            <div id={s.mySidenav} className={s.sidenav} style={{width: props.widthNav}}>\r\n                <a href=\"javascript:void(0)\" className={s.closeBtn} onClick={props.onClose}>&times;</a>\r\n                <a href=\"#\">Pre-junior</a>\r\n                <a href=\"#\">Junior</a>\r\n                <a href=\"#\">Middle</a>\r\n            </div>\r\n\r\n    )\r\n};","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {FirstHomework} from \"./FirstLesson\";\r\nimport {SecondHomework} from \"./SecondHomework\";\r\nimport {v1} from \"uuid\";\r\nimport {ThirdHomework} from \"./ThirdHomework\";\r\nimport {MyButton} from \"./common/MyButton/MyButton\";\r\nimport {MyCheckbox} from \"./common/MyCheckbox/MyCheckbox\";\r\nimport {MyInput} from \"./common/MyInput/MyInput\";\r\nimport {MyHeader} from \"./common/MyHeader/MyHeader\";\r\n\r\nexport type MessageType = {\r\n    name: string\r\n    text: string\r\n    time: string\r\n}\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    done: boolean\r\n}\r\n\r\nexport type NameType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nfunction App() {\r\n\r\n    const [width, setWidth] = useState('0px');\r\n    const [cursorPos, setCursorPos] = useState<number | null>(null)\r\n    const messages = [\r\n        {name: 'Artem', text: 'Privet', time: '20:00'},\r\n        {name: 'Lena', text: 'Kak dela', time: '20:01'},\r\n        {name: 'Anton', text: 'It-kamasutra', time: '20:02'},\r\n    ];\r\n\r\n    const [tasks, setTasks] = useState<Array<TaskType>>([\r\n        {id: v1(), title: 'React', done: false},\r\n        {id: v1(), title: 'HTML', done: true},\r\n        {id: v1(), title: 'CSS', done: true},\r\n        {id: v1(), title: 'SaSS', done: true},\r\n        {id: v1(), title: 'Less', done: true},\r\n    ]);\r\n\r\n    const [nam, newName] = useState<Array<NameType>>(\r\n        []\r\n    );\r\n\r\n    function removeTask(taskID: string) {\r\n        const newTasks = tasks.filter(task => task.id !== taskID);\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    function sayHello(name: string) {\r\n        const newN: NameType =  {id: v1(), name: name};\r\n        newName([newN, ...nam])\r\n    }\r\n\r\n    const changeTask = (taskID: string, done: boolean) => {\r\n        const changedTasks = tasks.find(task => task.id === taskID);\r\n        if (changedTasks) {\r\n            changedTasks.done = done;\r\n            setTasks([...tasks])\r\n        }\r\n    };\r\n\r\n    const closeNavBar = () => {\r\n        const zeroWidth = '0px';\r\n        setWidth(zeroWidth)\r\n    }\r\n    const openNavBar = () => {\r\n        const zeroWidth = '250px';\r\n        setWidth(zeroWidth)\r\n    }\r\n\r\n    const checkCursorPosition = (e: MouseEvent) => {\r\n        setCursorPos(e.clientX)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousemove', checkCursorPosition)\r\n        return () => {\r\n            document.removeEventListener('mousemove', () => {})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(cursorPos && cursorPos < 20){\r\n            openNavBar()\r\n        } else if (cursorPos && cursorPos >= 250){\r\n            closeNavBar()\r\n        }\r\n    }, [cursorPos])\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyHeader onClose={closeNavBar} widthNav={width}/>\r\n\r\n            <FirstHomework message={messages}/>\r\n            <SecondHomework tasks={tasks} removeTask={removeTask} changeTask={changeTask}/>\r\n            <ThirdHomework names={nam} sayHello={sayHello}/>\r\n            <div className='customComponent'>\r\n                <MyButton title={'Button 1'} onClick={() => console.log('Button 1')}/>\r\n                <MyButton title={'Button 2'} onClick={() => console.log('Button 2')} color={'red'}/>\r\n                <MyCheckbox type={'checkbox'}/>\r\n                <MyInput type={'input'}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}